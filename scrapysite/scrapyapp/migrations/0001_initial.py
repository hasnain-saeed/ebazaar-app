# Generated by Django 3.1 on 2020-09-07 05:20

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Brand Name')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Clothing Type')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_url', models.CharField(max_length=100, unique=True, verbose_name='URL')),
                ('spider_name', models.CharField(max_length=20, verbose_name='Spider')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('retailer_sku', models.CharField(max_length=20, unique=True, verbose_name='Retailer SKU')),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'men'), (2, 'women'), (3, 'girls'), (4, 'boys'), (5, 'unisex')], default=5)),
                ('description', models.CharField(max_length=512, verbose_name='Description')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active status')),
                ('is_out_of_stock', models.BooleanField(default=False, verbose_name='Out of stock status')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='scrapyapp.brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='scrapyapp.category')),
            ],
            managers=[
                ('products', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku_id', models.CharField(max_length=20, verbose_name='SKU ID')),
                ('currency', models.CharField(max_length=5, verbose_name='Currency')),
                ('price', models.FloatField(verbose_name='Price')),
                ('size', models.CharField(max_length=20, verbose_name='Size')),
                ('is_out_of_stock', models.BooleanField(default=False, null=True, verbose_name='Out of stock')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skus', to='scrapyapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='Image URL')),
                ('image_file', models.ImageField(default='default.jpg', upload_to='images')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='scrapyapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='scrapyapp.product')),
            ],
            options={
                'unique_together': {('product', 'email')},
            },
        ),
    ]
